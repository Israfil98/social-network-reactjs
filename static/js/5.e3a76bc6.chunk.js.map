{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/SendMessageForm/SendMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsPropsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","className","s","message","messageBody","DialogItem","dialogItem","id","activeClassName","active","name","maxLength300","maxLengthCreator","SendMessageForm","onSubmit","handleSubmit","sendMessageContainer","Field","textarea","component","Textarea","validate","required","placeholder","sendMessageBtn","SendMessageReduxForm","reduxForm","form","Dialogs","memo","dialogs","dialogsData","map","d","messages","messagesData","m","dialogsItems","messagesContainer","formData","sendMessage","newMessageBodyTextValue","compose","dialogsPage","dispatch","sendMessageAC"],"mappings":"iPAIMA,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAA0B,IAAtBC,KAAKC,MAAMN,OACJ,cAAC,IAAD,CAAUO,GAAG,WAEjB,cAACJ,EAAD,eAAgBE,KAAKC,YANO,GACXE,IAAML,WAWtC,OAFuCM,YAAQX,EAARW,CAAoCL,K,oBCnB/EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,iBAAmB,kCAAkC,kBAAoB,mCAAmC,aAAe,8BAA8B,SAAW,0BAA0B,qBAAuB,sCAAsC,SAAW,0BAA0B,eAAiB,kC,oBCAtWD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,6B,sHCUxDC,EARC,SAACN,GACb,OACI,qBAAKO,UAAWC,IAAEC,QAAlB,SACKT,EAAMU,e,0BCMJC,EARI,SAACX,GAChB,OACI,qBAAKO,UAAWC,IAAEI,WAAlB,SACI,cAAC,IAAD,CAASX,GAAI,YAAcD,EAAMa,GAAIC,gBAAiBN,IAAEO,OAAxD,SAAiEf,EAAMgB,U,kCCD7EC,EAAeC,YAAiB,KAEhCC,EAAkB,SAACnB,GACrB,OACI,uBAAMoB,SAAWpB,EAAMqB,aAAed,UAAYC,IAAEc,qBAApD,UACI,cAACC,EAAA,EAAD,CACIhB,UAAYC,IAAEgB,SACdC,UAAYC,IACZC,SAAW,CAACC,IAAUX,GACtBD,KAAK,0BACLa,YAAY,wBAEhB,wBAAQtB,UAAYC,IAAEsB,eAAtB,sBAKCC,EAAuBC,YAAU,CAE1CC,KAAM,eAF0BD,CAGjCb,GCKYe,EAvBChC,IAAMiC,MAAK,SAACnC,GACxB,IAAMoC,EAAUpC,EAAMqC,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY1B,GAAK0B,EAAE1B,GAAKG,KAAOuB,EAAEvB,MAAauB,EAAE1B,OACrF2B,EAAWxC,EAAMyC,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAShC,YAAcgC,EAAEhC,aAAoBgC,EAAE7B,OAM5F,OACI,sBAAKN,UAAYC,IAAE4B,QAAnB,UACI,qBAAK7B,UAAYC,IAAEmC,aAAnB,SACMP,IAEN,sBAAK7B,UAAYC,IAAEoC,kBAAnB,UACI,qBAAKrC,UAAYC,IAAEgC,SAAnB,SACMA,IAEN,cAACT,EAAD,CAAsBX,SAbd,SAACyB,GACjB7C,EAAM8C,YAAYD,EAASE,qC,kBCSpBC,sBACX7C,aAhBoB,SAACV,GACrB,MAAO,CACH4C,YAAa5C,EAAMwD,YAAYZ,YAC/BI,aAAchD,EAAMwD,YAAYR,iBAIb,SAACS,GACxB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAcJ,SAO/BnD,IAFWoD,CAGbd","file":"static/js/5.e3a76bc6.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth === false) {\n                return <Redirect to='/login'/>\n            }\n            return <Component { ...this.props } />\n        }\n    }\n\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return (\n        ConnectedAuthRedirectComponent\n    );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsContainer\":\"Dialogs_dialogsContainer__3xYxC\",\"messagesContainer\":\"Dialogs_messagesContainer__eYApo\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messages\":\"Dialogs_messages__1w_Up\",\"sendMessageContainer\":\"Dialogs_sendMessageContainer__3W1cW\",\"textarea\":\"Dialogs_textarea__PRKXN\",\"sendMessageBtn\":\"Dialogs_sendMessageBtn__3rKst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2RuWv\",\"active\":\"DialogItem_active__2qnc5\"};","import s from \"./Message.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.messageBody}\n        </div>\n    );\n};\n\nexport default Message;","import s from \"./DialogItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialogItem}>\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    );\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\n\nconst maxLength300 = maxLengthCreator(300)\n\nconst SendMessageForm = (props) => {\n    return (\n        <form onSubmit={ props.handleSubmit } className={ s.sendMessageContainer }>\n            <Field\n                className={ s.textarea }\n                component={ Textarea }\n                validate={ [required, maxLength300] }\n                name='newMessageBodyTextValue'\n                placeholder='Start a new message'\n            />\n            <button className={ s.sendMessageBtn }>Send</button>\n        </form>\n    );\n};\n\nexport const SendMessageReduxForm = reduxForm({\n    // a unique name for the form\n    form: 'sendMessage'\n})(SendMessageForm)\n\nexport default SendMessageForm;","import React from 'react';\n\nimport s from './Dialogs.module.css'\n\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport { SendMessageReduxForm } from \"./SendMessageForm/SendMessageForm\";\n\nconst Dialogs = React.memo((props) => {\n    const dialogs = props.dialogsData.map(d => <DialogItem id={ d.id } name={ d.name } key={ d.id }/>)\n    const messages = props.messagesData.map(m => <Message messageBody={ m.messageBody } key={ m.id }/>)\n\n    const sendMessage = (formData) => {\n        props.sendMessage(formData.newMessageBodyTextValue)\n    }\n\n    return (\n        <div className={ s.dialogs }>\n            <div className={ s.dialogsItems }>\n                { dialogs }\n            </div>\n            <div className={ s.messagesContainer }>\n                <div className={ s.messages }>\n                    { messages }\n                </div>\n                <SendMessageReduxForm onSubmit={ sendMessage }/>\n            </div>\n        </div>\n    );\n});\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from \"redux\";\n\nimport Dialogs from './Dialogs';\nimport { sendMessageAC } from '../../BLL/redux/dialogsReducer';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsData: state.dialogsPage.dialogsData,\n        messagesData: state.dialogsPage.messagesData,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBodyTextValue) => {\n            dispatch(sendMessageAC(newMessageBodyTextValue))\n        },\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}